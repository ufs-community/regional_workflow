#!/bin/bash

#
#-----------------------------------------------------------------------
#
# Source the variable definitions file and the bash utility functions.
#
#-----------------------------------------------------------------------
#
. ${GLOBAL_VAR_DEFNS_FP}
. $USHDIR/source_util_funcs.sh
#
#-----------------------------------------------------------------------
#
# Save current shell options (in a global array).  Then set new options
# for this script/function.
#
#-----------------------------------------------------------------------
#
{ save_shell_opts; set -u -x; } > /dev/null 2>&1
#
#-----------------------------------------------------------------------
#
# Get the full path to the file in which this script/function is located 
# (scrfunc_fp), the name of that file (scrfunc_fn), and the directory in
# which the file is located (scrfunc_dir).
#
#-----------------------------------------------------------------------
#
scrfunc_fp=$( readlink -f "${BASH_SOURCE[0]}" )
scrfunc_fn=$( basename "${scrfunc_fp}" )
scrfunc_dir=$( dirname "${scrfunc_fp}" )
#
#-----------------------------------------------------------------------
#
# Print message indicating entry into script.
#
#-----------------------------------------------------------------------
#
print_info_msg "
========================================================================
Entering script:  \"${scrfunc_fn}\"
In directory:     \"${scrfunc_dir}\"

This is the J-job script for the task that generates initial condition 
(IC), surface, and zeroth-hour lateral boundary condition (LBC0) files 
for the FV3 (in NetCDF format).
========================================================================"
#
#-----------------------------------------------------------------------
#
# Set machine-dependent parameters.
#
#-----------------------------------------------------------------------
#
case "$MACHINE" in

  "WCOSS_CRAY")
    ulimit -s unlimited
    APRUN="aprun -b -j1 -n48 -N12 -d1 -cc depth"
    ;;

  "WCOSS_DELL_P3")
    ulimit -s unlimited
    APRUN="mpirun"
    ;;

  "HERA")
    ulimit -s unlimited
    APRUN="srun"
    ;;

  "JET")
    ulimit -s unlimited
    APRUN="srun"
    ;;

  "ODIN")
    APRUN="srun"
    ;;

  "CHEYENNE")
    nprocs=$(( NNODES_MAKE_ICS*PPN_MAKE_ICS ))
    APRUN="mpirun -np $nprocs"
    ;;
  "STAMPEDE")
    APRUN="ibrun"
    ;;

esac
#
#-----------------------------------------------------------------------
#
# Find the directory in which the wgrib2 executable is located.
#
#-----------------------------------------------------------------------
#
wgrib2_dir=$( which wgrib2 ) || print_err_msg_exit "\
Directory in which the wgrib2 executable is located could not be found:
  wgrib2_dir = \"${wgrib2_dir}\""
#
#-----------------------------------------------------------------------
#
# Set the name of and create the directory in which the output from this
# script will be placed (if that directory doesn't already exist).
#
#-----------------------------------------------------------------------
#
ics_dir="${CYCLE_DIR}${SLASH_ENSMEM_SUBDIR}/INPUT"
mkdir_vrfy -p "${ics_dir}"
#
#-----------------------------------------------------------------------
#
# Call the ex-script for this J-job and pass to it the necessary variables.
#
#-----------------------------------------------------------------------
#
$SCRIPTSDIR/exregional_make_ics.sh \
  ics_dir="${ics_dir}" \
  wgrib2_dir="${wgrib2_dir}" \
  APRUN="${APRUN}" || \
print_err_msg_exit "\
Call to ex-script corresponding to J-job \"${scrfunc_fn}\" failed."
#
#-----------------------------------------------------------------------
#
# Print exit message.
#
#-----------------------------------------------------------------------
#
print_info_msg "
========================================================================
Exiting script:  \"${scrfunc_fn}\"
In directory:    \"${scrfunc_dir}\"
========================================================================"
#
#-----------------------------------------------------------------------
#
# Restore the shell options saved at the beginning of this script/function.
#
#-----------------------------------------------------------------------
#
{ restore_shell_opts; } > /dev/null 2>&1

