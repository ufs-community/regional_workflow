#!/bin/bash

#
#-----------------------------------------------------------------------
#
#
#-----------------------------------------------------------------------
#

#
#-----------------------------------------------------------------------
#
# Source the variable definitions file and the bash utility functions.
#
#-----------------------------------------------------------------------
#
. ${GLOBAL_VAR_DEFNS_FP}
. $USHDIR/source_util_funcs.sh
#
#-----------------------------------------------------------------------
#
# Save current shell options (in a global array).  Then set new options
# for this script/function.
#
#-----------------------------------------------------------------------
#
{ save_shell_opts; set -u -x; } > /dev/null 2>&1
#
#-----------------------------------------------------------------------
#
# Get the full path to the file in which this script/function is located 
# (scrfunc_fp), the name of that file (scrfunc_fn), and the directory in
# which the file is located (scrfunc_dir).
#
#-----------------------------------------------------------------------
#
scrfunc_fp=$( $READLINK -f "${BASH_SOURCE[0]}" )
scrfunc_fn=$( basename "${scrfunc_fp}" )
scrfunc_dir=$( dirname "${scrfunc_fp}" )
#
#-----------------------------------------------------------------------
#
# Print message indicating entry into script.
#
#-----------------------------------------------------------------------
#
print_info_msg "
========================================================================
Entering script:  \"${scrfunc_fn}\"
In directory:     \"${scrfunc_dir}\"

This is the J-job script for the task that runs METplus for point-stat
by initialitation time for all forecast hours.
========================================================================"
#
#-----------------------------------------------------------------------
#
# If it doesn't already exist, create the directory (vx_dir) in 
# which to store point-stat output. 
#
# Note that there may be a preexisting version of vx_dir from previous 
# runs of this script (e.g. from the workflow task that runs this script 
# failing and then being called again). Thus, we first make sure 
# preexisting versions are deleted.
#
#-----------------------------------------------------------------------
#

if [ "${RUN_ENVIR}" = "nco" ]; then
  COMOUT="$COMROOT/$NET/$envir/$RUN.$PDY/$cyc"
  postprd_dir="$COMOUT"
else
  postprd_dir="${CYCLE_DIR}/postprd"
fi
mkdir_vrfy -p "${postprd_dir}"

if [ "${RUN_ENVIR}" = "nco" ]; then
  COMOUT="$COMROOT/$NET/$envir/$RUN.$PDY/$cyc"
  vx_dir="$COMOUT"
else
  vx_dir="${CYCLE_DIR}/metprd"
fi
mkdir_vrfy -p "${vx_dir}"

pointstat_dir="${vx_dir}/point_stat"
#check_for_preexist_dir "${pointstat_dir}" "delete"
mkdir_vrfy -p "${pointstat_dir}"

cd_vrfy "${pointstat_dir}"
#
#-----------------------------------------------------------------------
#
# Call the ex-script for this J-job and pass to it the necessary varia-
# bles. 
#
#-----------------------------------------------------------------------
#
$SCRIPTSDIR/exregional_run_pointstatvx.sh \
  cycle_dir="${CYCLE_DIR}" \
  postprd_dir="${postprd_dir}" \
  vx_dir="${vx_dir}" \
  pointstat_dir="${pointstat_dir}" || \
print_err_msg_exit "\
Call to ex-script corresponding to J-job \"${scrfunc_fn}\" failed."
#
#-----------------------------------------------------------------------
#
# Print exit message.
#
#-----------------------------------------------------------------------
#
print_info_msg "
========================================================================
Exiting script:  \"${scrfunc_fn}\"
In directory:    \"${scrfunc_dir}\"
========================================================================"
#
#-----------------------------------------------------------------------
#
# Restore the shell options saved at the beginning of this script/func-
# tion.
#
#-----------------------------------------------------------------------
#
{ restore_shell_opts; } > /dev/null 2>&1

