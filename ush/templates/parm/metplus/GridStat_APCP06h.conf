# GridStat METplus Configuration

# section heading for [config] variables - all items below this line and
# before the next section heading correspond to the [config] section
[config]

# List of applications to run - only GridStat for this case
PROCESS_LIST = PcpCombine, GridStat

# time looping - options are INIT, VALID, RETRO, and REALTIME
# If set to INIT or RETRO:
#   INIT_TIME_FMT, INIT_BEG, INIT_END, and INIT_INCREMENT must also be set
# If set to VALID or REALTIME:
#   VALID_TIME_FMT, VALID_BEG, VALID_END, and VALID_INCREMENT must also be set
LOOP_BY = INIT

# Format of INIT_BEG and INT_END using % items
# %Y = 4 digit year, %m = 2 digit month, %d = 2 digit day, etc.
# see www.strftime.org for more information
# %Y%m%d%H expands to YYYYMMDDHH
INIT_TIME_FMT = %Y%m%d%H

# Start time for METplus run - must match INIT_TIME_FMT
INIT_BEG = {ENV[CDATE]}

# End time for METplus run - must match INIT_TIME_FMT
INIT_END = {ENV[CDATE]}

# Increment between METplus runs (in seconds if no units are specified)
#  Must be >= 60 seconds
INIT_INCREMENT = 3600

# List of forecast leads to process for each run time (init or valid)
# In hours if units are not specified
# If unset, defaults to 0 (don't loop through forecast leads)
LEAD_SEQ = {ENV[fhr_list]} 

# Order of loops to process data - Options are times, processes
# Not relevant if only one item is in the PROCESS_LIST
# times = run all wrappers in the PROCESS_LIST for a single run time, then
#   increment the run time and run all wrappers again until all times have
#   been evaluated.
# processes = run the first wrapper in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST until all
#   wrappers have been run
LOOP_ORDER = times

# Run pcp_combine on forecast/obs data?
# # If True, run PCPCombine on forecast data
# observation equivalent OBS_PCP_COMBINE_RUN also exists
FCST_PCP_COMBINE_RUN = True
OBS_PCP_COMBINE_RUN = True

# mode of PCPCombine to use (SUM, ADD, SUBTRACT, DERIVE, or CUSTOM)
FCST_PCP_COMBINE_METHOD = ADD
OBS_PCP_COMBINE_METHOD = ADD

# Accumulation interval available in forecast data
FCST_PCP_COMBINE_INPUT_ACCUMS = 01
FCST_PCP_COMBINE_OUTPUT_ACCUM = 06

# Accumulation interval available in obs data
OBS_PCP_COMBINE_INPUT_ACCUMS = 01
OBS_PCP_COMBINE_OUTPUT_ACCUM = 06

# If 'bucket' output already exists, skip the PcpCombine step for the data
PCP_COMBINE_SKIP_IF_OUTPUT_EXISTS = True

# maximum forecast lead to allow when searching for model data to use in PCPCombine
# Default is a very large time (4000 years) so setting this to a valid maximum value can
# speed up execution time of numerous runs
FCST_PCP_COMBINE_MAX_FORECAST = 2d

# keep initialization time constant
FCST_PCP_COMBINE_CONSTANT_INIT = True 

# Verbosity of MET output - overrides LOG_VERBOSITY for GridStat only
#LOG_GRID_STAT_VERBOSITY = 2

LOG_DIR = {ENV[EXPTDIR]}/log

# Specify the name of the metplus.log file
LOG_METPLUS = {LOG_DIR}/metplus.log.{ENV[LOG_SUFFIX]}

# Specify where the location and name of the final metplus_final.conf
METPLUS_CONF={OUTPUT_BASE}/metprd/grid_stat/metplus_final.APCP_06h.conf

# Location of MET config file to pass to GridStat
GRID_STAT_CONFIG_FILE = {PARM_BASE}/met_config/GridStatConfig_wrapped

# grid to remap data. Value is set as the 'to_grid' variable in the 'regrid' dictionary
# See MET User's Guide for more information
GRID_STAT_REGRID_TO_GRID = FCST 
GRID_STAT_REGRID_VLD_THRESH = 0.5
GRID_STAT_REGRID_METHOD = BUDGET
GRID_STAT_REGRID_WIDTH = 2
GRID_STAT_REGRID_SHAPE = SQUARE

#GRID_STAT_INTERP_FIELD = BOTH
#GRID_STAT_INTERP_VLD_THRESH = 1.0
#GRID_STAT_INTERP_SHAPE = SQUARE
#GRID_STAT_INTERP_TYPE_METHOD = NEAREST
#GRID_STAT_INTERP_TYPE_WIDTH = 1

#GRID_STAT_GRID_WEIGHT_FLAG =

# Name to identify model (forecast) data in output
MODEL = {ENV[MODEL]}
FCST_NATIVE_DATA_TYPE = GRIB
FCST_PCP_COMBINE_INPUT_DATATYPE = GRIB

# Name to identify observation data in output
OBTYPE = CCPA
OBS_NATIVE_DATA_TYPE = GRIB

# set the desc value in the GridStat MET config file
GRID_STAT_DESC = NA

# List of variables to compare in GridStat - FCST_VAR1 variables correspond
#  to OBS_VAR1 variables
# Note [FCST/OBS/BOTH]_GRID_STAT_VAR<n>_NAME can be used instead if different evaluations
# are needed for different tools

GRID_STAT_MET_CONFIG_OVERRIDES = cat_thresh = [NA]; cnt_thresh = [NA]; cnt_logic = UNION; wind_thresh = [NA]; wind_logic = UNION; ci_alpha = [0.05]; rank_corr_flag = FALSE;

# Name of forecast variable 1
FCST_VAR1_NAME = APCP

# List of levels to evaluate for forecast variable 1
# A06 = 6 hour accumulation in GRIB file
FCST_VAR1_LEVELS = A06

# List of thresholds to evaluate for each name/level combination for
#  forecast variable 1
#FCST_VAR1_THRESH = gt12.7, gt25.4, gt50.8, gt76.2
BOTH_VAR1_THRESH = gt0.0,ge0.254,ge0.508,ge1.27,ge2.54,ge3.810,ge6.350,ge8.890,ge12.700

#FCST_GRID_STAT_FILE_TYPE =

# Name of observation variable 1
OBS_VAR1_NAME = APCP

# List of levels to evaluate for observation variable 1
# (*,*) is NetCDF notation - must include quotes around these values!
# must be the same length as FCST_VAR1_LEVELS
OBS_VAR1_LEVELS = A06

# List of thresholds to evaluate for each name/level combination for
#  observation variable 1
#OBS_VAR1_THRESH = gt12.7, gt25.4, gt50.8, gt76.2

#OBS_GRID_STAT_FILE_TYPE =

# Time relative to valid time (in seconds) to allow files to be considered
#  valid. Set both BEGIN and END to 0 to require the exact time in the filename
#  Not used in this example.
FCST_GRID_STAT_FILE_WINDOW_BEGIN = 0
FCST_GRID_STAT_FILE_WINDOW_END = 0
OBS_GRID_STAT_FILE_WINDOW_BEGIN = 0
OBS_GRID_STAT_FILE_WINDOW_END = 0

# MET GridStat neighborhood values
# See the MET User's Guide GridStat section for more information
GRID_STAT_NEIGHBORHOOD_FIELD = BOTH

# width value passed to nbrhd dictionary in the MET config file
GRID_STAT_NEIGHBORHOOD_WIDTH = 3,5,7

# shape value passed to nbrhd dictionary in the MET config file
GRID_STAT_NEIGHBORHOOD_SHAPE = SQUARE

# cov thresh list passed to nbrhd dictionary in the MET config file
GRID_STAT_NEIGHBORHOOD_COV_THRESH = >=0.5

# Set to true to run GridStat separately for each field specified
# Set to false to create one run of GridStat per run time that
#   includes all fields specified.
GRID_STAT_ONCE_PER_FIELD = False

# Set to true if forecast data is probabilistic
FCST_IS_PROB = False

# Only used if FCST_IS_PROB is true - sets probabilistic threshold
FCST_GRID_STAT_PROB_THRESH = ==0.1

GRID_STAT_OUTPUT_PREFIX = {MODEL}_{CURRENT_FCST_NAME}_{ENV[acc]}_{OBTYPE}

# Climatology data
#GRID_STAT_CLIMO_MEAN_FILE_NAME =
#GRID_STAT_CLIMO_MEAN_FIELD =
#GRID_STAT_CLIMO_MEAN_REGRID_METHOD =
#GRID_STAT_CLIMO_MEAN_REGRID_WIDTH =
#GRID_STAT_CLIMO_MEAN_REGRID_VLD_THRESH =
#GRID_STAT_CLIMO_MEAN_REGRID_SHAPE =
#GRID_STAT_CLIMO_MEAN_TIME_INTERP_METHOD =
#GRID_STAT_CLIMO_MEAN_MATCH_MONTH =
#GRID_STAT_CLIMO_MEAN_DAY_INTERVAL =
#GRID_STAT_CLIMO_MEAN_HOUR_INTERVAL =

#GRID_STAT_CLIMO_STDEV_FILE_NAME =
#GRID_STAT_CLIMO_STDEV_FIELD =
#GRID_STAT_CLIMO_STDEV_REGRID_METHOD =
#GRID_STAT_CLIMO_STDEV_REGRID_WIDTH =
#GRID_STAT_CLIMO_STDEV_REGRID_VLD_THRESH =
#GRID_STAT_CLIMO_STDEV_REGRID_SHAPE =
#GRID_STAT_CLIMO_STDEV_TIME_INTERP_METHOD =
#GRID_STAT_CLIMO_STDEV_MATCH_MONTH =
#GRID_STAT_CLIMO_STDEV_DAY_INTERVAL =
#GRID_STAT_CLIMO_STDEV_HOUR_INTERVAL =

#GRID_STAT_CLIMO_CDF_BINS = 1
#GRID_STAT_CLIMO_CDF_CENTER_BINS = False
#GRID_STAT_CLIMO_CDF_WRITE_BINS = True

GRID_STAT_MASK_GRID =

# Statistical output types
GRID_STAT_OUTPUT_FLAG_FHO = STAT 
GRID_STAT_OUTPUT_FLAG_CTC = STAT
GRID_STAT_OUTPUT_FLAG_CTS = STAT
#GRID_STAT_OUTPUT_FLAG_MCTC = NONE
#GRID_STAT_OUTPUT_FLAG_MCTS = NONE
GRID_STAT_OUTPUT_FLAG_CNT = STAT
#GRID_STAT_OUTPUT_FLAG_SL1L2 = NONE
#GRID_STAT_OUTPUT_FLAG_SAL1L2 = NONE
#GRID_STAT_OUTPUT_FLAG_VL1L2 = NONE
#GRID_STAT_OUTPUT_FLAG_VAL1L2 = NONE
#GRID_STAT_OUTPUT_FLAG_VCNT = NONE
#GRID_STAT_OUTPUT_FLAG_PCT = NONE
#GRID_STAT_OUTPUT_FLAG_PSTD = NONE
#GRID_STAT_OUTPUT_FLAG_PJC = NONE
#GRID_STAT_OUTPUT_FLAG_PRC = NONE
#GRID_STAT_OUTPUT_FLAG_ECLV = BOTH
GRID_STAT_OUTPUT_FLAG_NBRCTC = STAT
GRID_STAT_OUTPUT_FLAG_NBRCTS = STAT
GRID_STAT_OUTPUT_FLAG_NBRCNT = STAT
#GRID_STAT_OUTPUT_FLAG_GRAD = BOTH
#GRID_STAT_OUTPUT_FLAG_DMAP = NONE

# NetCDF matched pairs output file
#GRID_STAT_NC_PAIRS_VAR_NAME =
GRID_STAT_NC_PAIRS_FLAG_LATLON = FALSE
GRID_STAT_NC_PAIRS_FLAG_RAW = FALSE
GRID_STAT_NC_PAIRS_FLAG_DIFF = FALSE
GRID_STAT_NC_PAIRS_FLAG_CLIMO = FALSE
#GRID_STAT_NC_PAIRS_FLAG_CLIMO_CDP = FALSE
GRID_STAT_NC_PAIRS_FLAG_WEIGHT = FALSE
GRID_STAT_NC_PAIRS_FLAG_NBRHD = FALSE
#GRID_STAT_NC_PAIRS_FLAG_FOURIER = FALSE
#GRID_STAT_NC_PAIRS_FLAG_GRADIENT = FALSE
#GRID_STAT_NC_PAIRS_FLAG_DISTANCE_MAP = FALSE
GRID_STAT_NC_PAIRS_FLAG_APPLY_MASK = FALSE

# End of [config] section and start of [dir] section
[dir]

# directory containing forecast input to PCPCombine and GridStat
INPUT_BASE = {ENV[INPUT_BASE]}
FCST_PCP_COMBINE_INPUT_DIR = {INPUT_BASE}
FCST_GRID_STAT_INPUT_DIR = {FCST_PCP_COMBINE_OUTPUT_DIR}

# directory containing observation input to PCPCombine and GridStat
OBS_PCP_COMBINE_INPUT_DIR = {ENV[OBS_DIR]}
OBS_GRID_STAT_INPUT_DIR = {OBS_PCP_COMBINE_OUTPUT_DIR}

# directory containing climatology mean input to GridStat
# Not used in this example
GRID_STAT_CLIMO_MEAN_INPUT_DIR =

# directory containing climatology mean input to GridStat
# Not used in this example
GRID_STAT_CLIMO_STDEV_INPUT_DIR =

# directory to write output from PCPCombine and GridStat
OUTPUT_BASE = {ENV[OUTPUT_BASE]}
FCST_PCP_COMBINE_OUTPUT_DIR = {OUTPUT_BASE}/metprd/pcp_combine
OBS_PCP_COMBINE_OUTPUT_DIR = {ENV[EXPTDIR]}/metprd/pcp_combine
GRID_STAT_OUTPUT_DIR = {OUTPUT_BASE}

STAGING_DIR = {OUTPUT_BASE}/stage/APCP_06h

# End of [dir] section and start of [filename_templates] section
[filename_templates]

# Template to look for forecast input to PCPCombine and GridStat relative to FCST_GRID_STAT_INPUT_DIR
FCST_PCP_COMBINE_INPUT_TEMPLATE = {ENV[NET]}.t{init?fmt=%H}z.prslevf{lead?fmt=%HHH}.tm{init?fmt=%H}.grib2
FCST_GRID_STAT_INPUT_TEMPLATE = {FCST_PCP_COMBINE_OUTPUT_TEMPLATE}

# Template to look for observation input to PCPCombine and GridStat relative to OBS_GRID_STAT_INPUT_DIR
OBS_PCP_COMBINE_INPUT_TEMPLATE = {valid?fmt=%Y%m%d}/ccpa.t{valid?fmt=%H}z.01h.hrap.conus.gb2
OBS_GRID_STAT_INPUT_TEMPLATE = {OBS_PCP_COMBINE_OUTPUT_TEMPLATE}

# Optional subdirectories relative to GRID_STAT_OUTPUT_DIR to write output from PCPCombine and GridStat
FCST_PCP_COMBINE_OUTPUT_TEMPLATE = {ENV[NET]}.t{init?fmt=%H}z.prslevf{lead?fmt=%HHH}.tm{init?fmt=%H}_a{level?fmt=%HH}h
OBS_PCP_COMBINE_OUTPUT_TEMPLATE = {valid?fmt=%Y%m%d}/ccpa.t{valid?fmt=%H}z.hrap.conus.gb2_a{level?fmt=%HH}h
GRID_STAT_OUTPUT_TEMPLATE = metprd/grid_stat

# Template to look for climatology input to GridStat relative to GRID_STAT_CLIMO_MEAN_INPUT_DIR
# Not used in this example
GRID_STAT_CLIMO_MEAN_INPUT_TEMPLATE =

# Template to look for climatology input to GridStat relative to GRID_STAT_CLIMO_STDEV_INPUT_DIR
# Not used in this example
GRID_STAT_CLIMO_STDEV_INPUT_TEMPLATE =

# Used to specify one or more verification mask files for GridStat
# Not used for this example
GRID_STAT_VERIFICATION_MASK_TEMPLATE = {MET_INSTALL_DIR}/share/met/poly/CONUS.poly
