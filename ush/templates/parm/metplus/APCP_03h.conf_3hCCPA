# Grid to Grid Precipitation

[dir]
# Input and output data directories
INPUT_BASE = {ENV[EXPTDIR]}/{ENV[CDATE]}/postprd
OUTPUT_BASE = {ENV[EXPTDIR]}
FCST_PCP_COMBINE_INPUT_DIR = {INPUT_BASE}
FCST_PCP_COMBINE_OUTPUT_DIR = {ENV[EXPTDIR]}/{ENV[CDATE]}/metprd/pcp_combine
FCST_GRID_STAT_INPUT_DIR = {FCST_PCP_COMBINE_OUTPUT_DIR}

OBS_GRID_STAT_INPUT_DIR = {ENV[OBS_DIR]}

GRID_STAT_OUTPUT_DIR = {OUTPUT_BASE}

LOG_DIR = {OUTPUT_BASE}/log

[filename_templates]
# format of filenames
FCST_PCP_COMBINE_INPUT_TEMPLATE = {ENV[NET]}.t{init?fmt=%H}z.bgdawpf{lead?fmt=%HHH}.tm{init?fmt=%H}.grib2
FCST_PCP_COMBINE_OUTPUT_TEMPLATE = {ENV[NET]}.t{init?fmt=%H}z.bgdawpf{lead?fmt=%HHH}.tm{init?fmt=%H}_a{level?fmt=%HH}h
FCST_GRID_STAT_INPUT_TEMPLATE = {FCST_PCP_COMBINE_OUTPUT_TEMPLATE}

# ANLYS
OBS_GRID_STAT_INPUT_TEMPLATE = {valid?fmt=%Y%m%d}/ccpa.t{valid?fmt=%H}z.03h.hrap.conus.gb2

GRID_STAT_OUTPUT_TEMPLATE = {init?fmt=%Y%m%d%H}/metprd/grid_stat

# Location of MET poly files
GRID_STAT_VERIFICATION_MASK_TEMPLATE = {MET_INSTALL_DIR}/share/met/poly/CONUS.poly

[config]
# Model to verify
MODEL = {ENV[MODEL]} 
FCST_NATIVE_DATA_TYPE = GRIB

# Set obtype to vx
OBTYPE = CCPA
OBS_NATIVE_DATA_TYPE = GRIB

# List of applications to run
PROCESS_LIST = PcpCombine, GridStat

# Run pcp_combine on forecast/obs data?
FCST_PCP_COMBINE_RUN = True
OBS_PCP_COMBINE_RUN = False

# Mode of pcp_combine to use (SUM, ADD, SUBTRACT)
FCST_PCP_COMBINE_METHOD = ADD

FCST_PCP_COMBINE_CONSTANT_INIT = True

# Accumulation interval available in forecast data
FCST_PCP_COMBINE_INPUT_ACCUMS = 01
FCST_PCP_COMBINE_OUTPUT_ACCUM = 03

# If 'bucket' output already exists, skip the PcpCombine step for the data
PCP_COMBINE_SKIP_IF_OUTPUT_EXISTS = True

# Forecast data description variables
FCST_PCP_COMBINE_INPUT_DATATYPE = GRIB
FCST_IS_PROB = false

# location of grid_stat MET config file
GRID_STAT_CONFIG_FILE = {CONFIG_DIR}/GridStatConfig_APCP
GRID_STAT_OUTPUT_PREFIX = {MODEL}_{CURRENT_FCST_NAME}_{ENV[acc]}_{OBTYPE}

# time looping - options are INIT, VALID, RETRO, and REALTIME
LOOP_BY = INIT

# Format of INIT_BEG and INIT_END
INIT_TIME_FMT = %Y%m%d%H

# Start time for METplus run
INIT_BEG = {ENV[CDATE]}
# End time for METplus run
INIT_END = {ENV[CDATE]} 
# Increment between METplus runs in seconds. Must be > 60
INIT_INCREMENT = 3600 
INIT_TIME_FMT = %Y%m%d%H

# list of forecast leads to process. 
#LEAD_SEQ = begin_end_incr({ENV[ACCUM]},{ENV[LAST_HR]},{ENV[ACCUM]})
LEAD_SEQ = {ENV[fhr_list]}

# Options are times, processes
# times = run all items in the PROCESS_LIST for a single initialization
# time, then repeat until all times have been evaluated.
# processes = run each item in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST.
LOOP_ORDER = times

# Set grid to verify on
GRID_STAT_REGRID_TO_GRID = FCST

# list of variables to compare
# thresholds in mm, equal to .01",.02",.05",.10",.25",.50",.75",1.0"
FCST_VAR1_NAME = APCP
FCST_VAR1_LEVELS = A03

BOTH_VAR1_THRESH = gt0.0,ge0.254,ge0.508,ge1.27,ge2.54,ge3.810,ge6.350

OBS_VAR1_NAME = APCP
OBS_VAR1_LEVELS = A03

# Neighborhood shape and widths
GRID_STAT_NEIGHBORHOOD_SHAPE = SQUARE
GRID_STAT_NEIGHBORHOOD_WIDTH = 3,5,7

