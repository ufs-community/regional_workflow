# Ensemble-Stat METplus Configuration

[config]

## Configuration-related settings such as the process list, begin and end times, etc.
PROCESS_LIST = PB2NC, EnsembleStat

# Looping by times: steps through each 'task' in the PROCESS_LIST for each
# defined time, and repeats until all times have been evaluated.
LOOP_ORDER = times

# LOOP_BY: Set to INIT to loop over initialization times
LOOP_BY = INIT

# Format of INIT_BEG and INT_END
INIT_TIME_FMT = %Y%m%d%H

# Start time for METplus run
INIT_BEG={ENV[CDATE]}

# End time for METplus run
INIT_END={ENV[CDATE]}

# Increment between METplus runs in seconds. Must be >= 60
INIT_INCREMENT=3600

# List of forecast leads to process
LEAD_SEQ = {ENV[fhr_list]}

# Used in the MET config file for:  model, output_prefix
MODEL = {ENV[MODEL]}

ENSEMBLE_STAT_DESC = NA

# Name to identify observation data in output
OBTYPE = NDAS

#ENSEMBLE_STAT_DESC =

# The MET ensemble_stat logging level
# 0 quiet to 5 loud, Verbosity setting for MET ensemble_stat output, 2 is default.
# This takes precendence over the general LOG_MET_VERBOSITY set in metplus_logging.conf
LOG_ENSEMBLE_STAT_VERBOSITY = 3

# Values to pass to pb2nc config file using environment variables of the same name.
PB2NC_GRID =
PB2NC_POLY =
PB2NC_STATION_ID =
PB2NC_MESSAGE_TYPE = ADPSFC, ADPUPA
PB2NC_LEVEL_CATEGORY = 0, 1, 4, 5, 6
PB2NC_QUALITY_MARK_THRESH = 9

PB2NC_PB_REPORT_TYPE = 120, 220, 221, 122, 222, 223, 224, 131, 133, 233, 153, 156, 157, 188, 288, 180, 280, 181, 182, 281, 282, 183, 284, 187, 287

# Leave empty to process all
# PB2NC_OBS_BUFR_VAR_LIST = POB, QOB, TOB, ZOB, UOB, VOB, PMO, TOCC, TDO, HOVI, D_DPT, D_WDIR, D_WIND, D_RH, D_MIXR, D_PRMSL
PB2NC_OBS_BUFR_VAR_LIST = PMO, ZOB, TOB, TDO, QOB, UOB, VOB, PWO, TOCC, D_RH, HOVI, CEILING, D_PBL, D_CAPE, MXGS, D_WIND

# Mapping of input BUFR variable names to output variables names.
# The default PREPBUFR map, obs_prepbufr_map, is appended to this map.
PB2NC_MET_CONFIG_OVERRIDES = obs_bufr_map = [{ key = "HOVI"; val = "VIS"; },{ key = "PMO"; val = "PRMSL"; },{ key = "TDO"; val = "DPT"; }, { key = "PWO"; val = "PWAT"; },{ key = "MXGS"; val = "GUST"; }, { key = "CEILING"; val = "CEILING"; }, { key = "TOCC"; val = "TCDC"; }];

# False for no time summary, True otherwise
PB2NC_TIME_SUMMARY_FLAG = False
PB2NC_TIME_SUMMARY_BEG = 000000  ;; start time of time summary in HHMMSS format
PB2NC_TIME_SUMMARY_END = 235959  ;; end time of time summary in HHMMSS format
PB2NC_TIME_SUMMARY_VAR_NAMES = PMO,TOB,TDO,UOB,VOB,PWO,TOCC
PB2NC_TIME_SUMMARY_TYPES = min, max, range, mean, stdev, median, p80  ;; a list of the statistics to summarize

OBS_WINDOW_BEGIN = -1799
OBS_WINDOW_END = 1800

PB2NC_WINDOW_BEGIN = {OBS_WINDOW_BEGIN}
PB2NC_WINDOW_END = {OBS_WINDOW_END}

OBS_ENSEMBLE_STAT_WINDOW_BEGIN = {OBS_WINDOW_BEGIN}
OBS_ENSEMBLE_STAT_WINDOW_END = {OBS_WINDOW_END}

# number of expected members for ensemble. Should correspond with the
# number of items in the list for FCST_ENSEMBLE_STAT_INPUT_TEMPLATE
ENSEMBLE_STAT_N_MEMBERS = {ENV[NUM_ENS_MEMBERS]}

# ens.ens_thresh value in the MET config file
# threshold for ratio of valid files to expected files to allow app to run
ENSEMBLE_STAT_ENS_THRESH = 0.05

# ens.vld_thresh value in the MET config file
ENSEMBLE_STAT_ENS_VLD_THRESH = 1.0

ENSEMBLE_STAT_OUTPUT_PREFIX = {MODEL}_ADPSFC_{OBTYPE}

# MET Configuration files for pb2nc and ensemble_stat
PB2NC_CONFIG_FILE = {PARM_BASE}/met_config/PB2NCConfig_wrapped
ENSEMBLE_STAT_CONFIG_FILE = {PARM_BASE}/met_config/EnsembleStatConfig_wrapped

# if True, pb2nc will skip processing a file if the output already exists
# used to speed up runs and reduce redundancy
PB2NC_SKIP_IF_OUTPUT_EXISTS = True

# ENSEMBLE_STAT_MET_OBS_ERR_TABLE is not required.
# If the variable is not defined, or the value is not set
# than the MET default is used.
ENSEMBLE_STAT_MET_OBS_ERR_TABLE = {MET_BASE}/table_files/obs_error_table.txt


# Used in the MET config file for: regrid to_grid field
ENSEMBLE_STAT_REGRID_TO_GRID = NONE
#ENSEMBLE_STAT_REGRID_METHOD = BILIN
#ENSEMBLE_STAT_REGRID_WIDTH = 2
#ENSEMBLE_STAT_REGRID_VLD_THRESH = 0.5
#ENSEMBLE_STAT_REGRID_SHAPE = SQUARE

ENSEMBLE_STAT_CENSOR_THRESH =
ENSEMBLE_STAT_CENSOR_VAL =

#ENSEMBLE_STAT_NBRHD_PROB_WIDTH = 5
#ENSEMBLE_STAT_NBRHD_PROB_SHAPE = CIRCLE
#ENSEMBLE_STAT_NBRHD_PROB_VLD_THRESH = 0.0

#ENSEMBLE_STAT_NMEP_SMOOTH_VLD_THRESH = 0.0
#ENSEMBLE_STAT_NMEP_SMOOTH_SHAPE = CIRCLE
#ENSEMBLE_STAT_NMEP_SMOOTH_GAUSSIAN_DX = 81.27
#ENSEMBLE_STAT_NMEP_SMOOTH_GAUSSIAN_RADIUS = 120
#ENSEMBLE_STAT_NMEP_SMOOTH_METHOD = GAUSSIAN
#ENSEMBLE_STAT_NMEP_SMOOTH_WIDTH = 1

ENSEMBLE_STAT_MESSAGE_TYPE = ADPSFC

ENSEMBLE_STAT_DUPLICATE_FLAG = NONE
ENSEMBLE_STAT_SKIP_CONST = FALSE

ENSEMBLE_STAT_OBS_ERROR_FLAG = FALSE

ENSEMBLE_STAT_ENS_SSVAR_BIN_SIZE = 1.0
ENSEMBLE_STAT_ENS_PHIST_BIN_SIZE = 0.05

#ENSEMBLE_STAT_CLIMO_MEAN_FILE_NAME =
#ENSEMBLE_STAT_CLIMO_MEAN_FIELD =
#ENSEMBLE_STAT_CLIMO_MEAN_REGRID_METHOD =
#ENSEMBLE_STAT_CLIMO_MEAN_REGRID_WIDTH =
#ENSEMBLE_STAT_CLIMO_MEAN_REGRID_VLD_THRESH =
#ENSEMBLE_STAT_CLIMO_MEAN_REGRID_SHAPE =
#ENSEMBLE_STAT_CLIMO_MEAN_TIME_INTERP_METHOD =
#ENSEMBLE_STAT_CLIMO_MEAN_MATCH_MONTH =
#ENSEMBLE_STAT_CLIMO_MEAN_DAY_INTERVAL = 31
#ENSEMBLE_STAT_CLIMO_MEAN_HOUR_INTERVAL = 6

#ENSEMBLE_STAT_CLIMO_STDEV_FILE_NAME =
#ENSEMBLE_STAT_CLIMO_STDEV_FIELD =
#ENSEMBLE_STAT_CLIMO_STDEV_REGRID_METHOD =
#ENSEMBLE_STAT_CLIMO_STDEV_REGRID_WIDTH =
#ENSEMBLE_STAT_CLIMO_STDEV_REGRID_VLD_THRESH =
#ENSEMBLE_STAT_CLIMO_STDEV_REGRID_SHAPE =
#ENSEMBLE_STAT_CLIMO_STDEV_TIME_INTERP_METHOD =
#ENSEMBLE_STAT_CLIMO_STDEV_MATCH_MONTH =
#ENSEMBLE_STAT_CLIMO_STDEV_DAY_INTERVAL = 31
#ENSEMBLE_STAT_CLIMO_STDEV_HOUR_INTERVAL = 6


#ENSEMBLE_STAT_CLIMO_CDF_BINS = 1
#ENSEMBLE_STAT_CLIMO_CDF_CENTER_BINS = False
#ENSEMBLE_STAT_CLIMO_CDF_WRITE_BINS = True

ENSEMBLE_STAT_MASK_GRID = 

ENSEMBLE_STAT_CI_ALPHA = 0.05

ENSEMBLE_STAT_INTERP_FIELD = BOTH
ENSEMBLE_STAT_INTERP_VLD_THRESH = 1.0
ENSEMBLE_STAT_INTERP_SHAPE = SQUARE
ENSEMBLE_STAT_INTERP_METHOD = NEAREST
ENSEMBLE_STAT_INTERP_WIDTH = 1

ENSEMBLE_STAT_OUTPUT_FLAG_ECNT = STAT
ENSEMBLE_STAT_OUTPUT_FLAG_RPS = NONE
ENSEMBLE_STAT_OUTPUT_FLAG_RHIST = STAT
ENSEMBLE_STAT_OUTPUT_FLAG_PHIST = STAT
ENSEMBLE_STAT_OUTPUT_FLAG_ORANK = STAT
ENSEMBLE_STAT_OUTPUT_FLAG_SSVAR = STAT
ENSEMBLE_STAT_OUTPUT_FLAG_RELP = STAT

ENSEMBLE_STAT_ENSEMBLE_FLAG_LATLON = TRUE
ENSEMBLE_STAT_ENSEMBLE_FLAG_MEAN = TRUE
ENSEMBLE_STAT_ENSEMBLE_FLAG_STDEV = TRUE
ENSEMBLE_STAT_ENSEMBLE_FLAG_MINUS = FALSE
ENSEMBLE_STAT_ENSEMBLE_FLAG_PLUS = FALSE
ENSEMBLE_STAT_ENSEMBLE_FLAG_MIN = FALSE
ENSEMBLE_STAT_ENSEMBLE_FLAG_MAX = FALSE
ENSEMBLE_STAT_ENSEMBLE_FLAG_RANGE = TRUE
ENSEMBLE_STAT_ENSEMBLE_FLAG_VLD_COUNT = TRUE
ENSEMBLE_STAT_ENSEMBLE_FLAG_FREQUENCY = TRUE
ENSEMBLE_STAT_ENSEMBLE_FLAG_NEP = FALSE
ENSEMBLE_STAT_ENSEMBLE_FLAG_NMEP = FALSE
ENSEMBLE_STAT_ENSEMBLE_FLAG_RANK = TRUE
ENSEMBLE_STAT_ENSEMBLE_FLAG_WEIGHT = FALSE

# Ensemble Variables and levels as specified in the ens field dictionary 
# of the MET configuration file. Specify as ENS_VARn_NAME, ENS_VARn_LEVELS,
# (optional) ENS_VARn_OPTION
ENS_VAR1_NAME = TMP
ENS_VAR1_LEVELS = Z02
ENS_VAR1_THRESH = >=268, >=273, >=278, >=293, >=298, >=303

ENS_VAR2_NAME = DPT
ENS_VAR2_LEVELS = Z2
ENS_VAR2_THRESH = >=263, >=268, >=273, >=288, >=293, >=298

ENS_VAR3_NAME = WIND
ENS_VAR3_LEVELS = Z10
ENS_VAR3_THRESH = >=5, >=10, >=15
ENS_VAR3_OPTIONS = GRIB2_pdt = 0; ;; derive instantaneous 10-m wind from U/V components, overriding max 10-m wind

ENS_VAR4_NAME = TCDC
ENS_VAR4_LEVELS = L0
ENS_VAR4_THRESH = <25, >75
ENS_VAR4_OPTIONS = GRIB_lvl_typ = 200; GRIB2_ipdtmpl_index = [ 14 ]; GRIB2_ipdtmpl_val = [ 0 ]; interp = { type = [ { method = NEAREST; width = 1; } ]; }

ENS_VAR5_NAME = VIS
ENS_VAR5_LEVELS = L0
ENS_VAR5_THRESH = <1609, <8045, >=8045
ENS_VAR5_OPTIONS = interp = { type = [ { method = NEAREST; width = 1; } ]; }

ENS_VAR6_NAME = HGT
ENS_VAR6_LEVELS = L0
ENS_VAR6_THRESH = <152, <1520, >=914
ENS_VAR6_OPTIONS = GRIB_lvl_typ = 215; desc = "CEILING";


# Forecast and observation variables and levels as specified in the fcst field dictionary 
# of the MET configuration file. Specify as FCST_VARn_NAME, FCST_VARn_LEVELS,
# (optional) FCST_VARn_OPTION and OBS_VARn_NAME, OBS_VARn_LEVELS,
# (optional) OBS_VARn_OPTION

FCST_VAR1_NAME = TMP
FCST_VAR1_LEVELS = Z2
FCST_VAR1_THRESH = >=268, >=273, >=278, >=293, >=298, >=303
OBS_VAR1_NAME = TMP
OBS_VAR1_LEVELS = Z2
OBS_VAR1_THRESH = >=268, >=273, >=278, >=293, >=298, >=303
OBS_VAR1_OPTIONS = obs_error = { flag = TRUE; dist_type = NONE; dist_parm = []; inst_bias_scale = 1.0; inst_bias_offset = 0.0; min = NA; max = NA; }

FCST_VAR2_NAME = DPT
FCST_VAR2_LEVELS = Z2
FCST_VAR2_THRESH = >=263, >=268, >=273, >=288, >=293, >=298
OBS_VAR2_NAME = DPT
OBS_VAR2_LEVELS = Z2
OBS_VAR2_THRESH = >=263, >=268, >=273, >=288, >=293, >=298
OBS_VAR2_OPTIONS = obs_error = { flag = TRUE; dist_type = NONE; dist_parm = []; inst_bias_scale = 1.0; inst_bias_offset = 0.0; min = NA; max = NA; }

FCST_VAR3_NAME = WIND
FCST_VAR3_LEVELS = Z10
FCST_VAR3_THRESH = >=5, >=10, >=15
FCST_VAR3_OPTIONS = GRIB2_pdt = 0; ;; derive instantaneous 10-m wind from U/V components, overriding max 10-m wind
OBS_VAR3_NAME = WIND
OBS_VAR3_LEVELS = Z10
OBS_VAR3_THRESH = >=5, >=10, >=15
OBS_VAR3_OPTIONS = obs_error = { flag = TRUE; dist_type = NONE; dist_parm = []; inst_bias_scale = 1.0; inst_bias_offset = 0.0; min = NA; max = NA; }

FCST_VAR4_NAME = TCDC
FCST_VAR4_LEVELS = L0
FCST_VAR4_THRESH = <25, >75
FCST_VAR4_OPTIONS = GRIB_lvl_typ = 200; GRIB2_ipdtmpl_index = 8; GRIB2_ipdtmpl_val = {lead?fmt=%H};
OBS_VAR4_NAME = TCDC
OBS_VAR4_LEVELS = L0
OBS_VAR4_THRESH = <25, >75
OBS_VAR4_OPTIONS = interp = { type = [ { method = NEAREST; width = 1; } ]; }

BOTH_VAR5_NAME = VIS
BOTH_VAR5_LEVELS = L0
BOTH_VAR5_THRESH = <1609, <8045, >=8045
BOTH_VAR5_OPTIONS = interp = { type = [ { method = NEAREST; width = 1; } ]; }

FCST_VAR6_NAME = HGT
FCST_VAR6_LEVELS = L0
FCST_VAR6_THRESH = <152, <1520, >=914
FCST_VAR6_OPTIONS = GRIB_lvl_typ = 215; desc = "CEILING";
OBS_VAR6_NAME = CEILING
OBS_VAR6_LEVELS = L0
OBS_VAR6_OPTIONS = GRIB_lvl_typ = 215; interp = { type = [ { method = NEAREST; width = 1; } ]; }
OBS_VAR6_THRESH = <152, <305, >=914

[dir]
# Input and output directories for pb2nc
PB2NC_INPUT_DIR = {ENV[OBS_DIR]}
PB2NC_OUTPUT_DIR = {ENV[EXPTDIR]}/metprd/pb2nc

# Forecast model input directory for ensemble_stat
FCST_ENSEMBLE_STAT_INPUT_DIR = {ENV[EXPTDIR]}/{ENV[CDATE]}

# Point observation input dir for ensemble_stat
OBS_ENSEMBLE_STAT_POINT_INPUT_DIR = {PB2NC_OUTPUT_DIR}

# Grid observation input dir for ensemble_stat
OBS_ENSEMBLE_STAT_GRID_INPUT_DIR = 

# directory containing climatology mean input to EnsembleStat
# Not used in this example
ENSEMBLE_STAT_CLIMO_MEAN_INPUT_DIR =

# directory containing climatology mean input to EnsembleStat
# Not used in this example
ENSEMBLE_STAT_CLIMO_STDEV_INPUT_DIR =

# output directory for ensemble_stat
OUTPUT_BASE = {ENV[EXPTDIR]}
ENSEMBLE_STAT_OUTPUT_DIR = {OUTPUT_BASE}

# directory containing log files
LOG_DIR = {ENV[EXPTDIR]}/log

# directory for staging data
STAGING_DIR = {OUTPUT_BASE}/stage/conus_sfc


[filename_templates]

# Input and output templates for pb2nc
PB2NC_INPUT_TEMPLATE = prepbufr.ndas.{valid?fmt=%Y%m%d%H}
PB2NC_OUTPUT_TEMPLATE = prepbufr.ndas.{valid?fmt=%Y%m%d%H}.nc

# FCST_ENSEMBLE_STAT_INPUT_TEMPLATE  - comma separated list of ensemble members
# or a single line, - filename wildcard characters may be used, ? or *.

FCST_ENSEMBLE_STAT_INPUT_TEMPLATE =
    mem*/postprd/{ENV[NET]}.t{init?fmt=%H}z.prslevf{lead?fmt=%HHH}.tm{init?fmt=%H}.grib2

# Template to look for point observations.
# Example precip24_2010010112.nc
OBS_ENSEMBLE_STAT_POINT_INPUT_TEMPLATE = {PB2NC_OUTPUT_TEMPLATE}

# Template to look for gridded observations.
# Example ST4.2010010112.24h
OBS_ENSEMBLE_STAT_GRID_INPUT_TEMPLATE = 

ENSEMBLE_STAT_VERIFICATION_MASK_TEMPLATE = {MET_INSTALL_DIR}/share/met/poly/CONUS.poly

# Template to look for climatology input to EnsembleStat relative to ENSEMBLE_STAT_CLIMO_MEAN_INPUT_DIR
# Not used in this example
ENSEMBLE_STAT_CLIMO_MEAN_INPUT_TEMPLATE =

# Template to look for climatology input to EnsembleStat relative to ENSEMBLE_STAT_CLIMO_STDEV_INPUT_DIR
# Not used in this example
ENSEMBLE_STAT_CLIMO_STDEV_INPUT_TEMPLATE =

# Template for where ensemble-stat output is written
ENSEMBLE_STAT_OUTPUT_TEMPLATE = {init?fmt=%Y%m%d%H}/metprd/ensemble_stat

# Specify the name of the metplus.log file
LOG_METPLUS = {LOG_DIR}/metplus.log.{ENV[LOG_SUFFIX]}_sfc

# Specify where the location and name of the final metplus_final.conf
METPLUS_CONF={OUTPUT_BASE}/{ENV[CDATE]}/metprd/ensemble_stat/metplus_final.conus_surface.conf

